import { expect, it } from 'vitest'
import { join } from 'node:path'

import { compareMessages, parseIntoFsdRoot } from '../_lib/prepare-test.js'
import noFileSegments from './index.js'

it('reports no errors on a project with only folder segments', async () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ styles.ts
        ğŸ“„ Button.tsx
        ğŸ“„ TextField.tsx
        ğŸ“„ index.ts
    ğŸ“‚ pages
      ğŸ“‚ editor
        ğŸ“‚ ui
          ğŸ“„ EditorPage.tsx
          ğŸ“„ Editor.tsx
        ğŸ“„ index.ts
  `)

  expect(noFileSegments.check(root).diagnostics).toEqual([])
})

it('reports no errors on a project with folder segments on sliced layers', async () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ styles.ts
        ğŸ“„ Button.tsx
        ğŸ“„ TextField.tsx
        ğŸ“„ index.ts
    ğŸ“‚ features
      ğŸ“‚ comments
        ğŸ“„ ui.tsx
        ğŸ“„ index.ts
    ğŸ“‚ pages
      ğŸ“‚ editor
        ğŸ“„ ui.tsx
        ğŸ“„ index.ts
      ğŸ“‚ settings
        ğŸ“‚ ui
          ğŸ“„ SettingsPage.tsx
        ğŸ“„ index.ts
  `)

  expect(noFileSegments.check(root).diagnostics).toEqual([
    {
      message: `In "${join('features', 'comments')}", "ui.tsx" is a file segment. Prefer folder segments.`,
    },
    {
      message: `In "${join('pages', 'editor')}", "ui.tsx" is a file segment. Prefer folder segments.`,
    },
  ])
})

it('reports errors on a project with folder segments in Shared', async () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“„ routes.ts
      ğŸ“‚ ui
        ğŸ“„ styles.ts
        ğŸ“„ Button.tsx
        ğŸ“„ TextField.tsx
        ğŸ“„ index.ts
    ğŸ“‚ entities
      ğŸ“‚ user
        ğŸ“‚ ui
          ğŸ“„ UserAvatar.tsx
        ğŸ“„ index.ts
      ğŸ“‚ product
        ğŸ“‚ ui
          ğŸ“„ ProductCard.tsx
        ğŸ“„ index.ts
    ğŸ“‚ features
      ğŸ“‚ comments
        ğŸ“‚ ui
          ğŸ“„ CommentCard.tsx
        ğŸ“„ index.ts
    ğŸ“‚ pages
      ğŸ“‚ editor
        ğŸ“‚ ui
          ğŸ“„ EditorPage.tsx
          ğŸ“„ Editor.tsx
        ğŸ“„ index.ts
      ğŸ“‚ settings
        ğŸ“‚ ui
          ğŸ“„ SettingsPage.tsx
        ğŸ“„ index.ts
  `)

  expect(noFileSegments.check(root).diagnostics.sort(compareMessages)).toEqual([
    {
      message: `On layer "shared", "routes.ts" is a file segment. Prefer folder segments.`,
    },
  ])
})
