import { expect, it } from 'vitest'

import repetitiveNaming from '.'
import { parseIntoFsdRoot } from '../prepare-test'

it('reports no errors on a project with no repetitive words in slices', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ about
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ contact
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  expect(repetitiveNaming.check(root)).toEqual({ errors: [] })
})

it('reports errors on a project with repetition of "page"', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ pages
      ğŸ“‚ homePage
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ aboutPage
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ contactPage
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  const errors = repetitiveNaming.check(root).errors.sort()
  expect(errors).toEqual([
    'Repetitive word "page" in slice names on layer "pages"',
  ])
})

it('recognizes words in different naming conventions', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ entities
      ğŸ“‚ ClientFolder
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ provider-folder
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ service_folder
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  const errors = repetitiveNaming.check(root).errors.sort()
  expect(errors).toEqual([
    'Repetitive word "folder" in slice names on layer "entities"',
  ])
})
