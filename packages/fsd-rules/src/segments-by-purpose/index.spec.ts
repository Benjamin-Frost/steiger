import { expect, it } from 'vitest'

import segmentsByPurpose from './index.js'
import { compareMessages, parseIntoFsdRoot } from '../_lib/prepare-test.js'

it('reports no errors on a project with good segments', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ lib
        ğŸ“„ index.ts
    ğŸ“‚ entities
      ğŸ“‚ user
        ğŸ“‚ ui
        ğŸ“‚ model
        ğŸ“„ index.ts
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  expect(segmentsByPurpose.check(root)).toEqual({ diagnostics: [] })
})

it('reports errors on a project with bad segments', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ modals
        ğŸ“„ index.ts
      ğŸ“‚ hooks
        ğŸ“„ index.ts
      ğŸ“‚ helpers
        ğŸ“„ index.ts
      ğŸ“‚ utils
        ğŸ“„ index.ts
    ğŸ“‚ entities
      ğŸ“‚ user
        ğŸ“‚ components
        ğŸ“‚ model
        ğŸ“„ index.ts
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  const diagnostics = segmentsByPurpose.check(root).diagnostics.sort(compareMessages)
  expect(diagnostics).toEqual([
    { message: 'Non-descriptive segment name "components" on slice "user" on layer "entities"' },
    { message: 'Non-descriptive segment name "helpers" on layer "shared"' },
    { message: 'Non-descriptive segment name "hooks" on layer "shared"' },
    { message: 'Non-descriptive segment name "modals" on layer "shared"' },
    { message: 'Non-descriptive segment name "utils" on layer "shared"' },
  ])
})
